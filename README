Repository for SYSC4907 Capstone Engineering Project "Pediatric Laparoscopic Surgery Simulator" at Carleton University (Fall 2022/Winter 2023)

Group Members:
Nathan Mezzomo
Miles Sutherland
Titus Priscu


Main.py is the main program for running the project.

HSV.py is a supplmentary program from https://toptechboy.com/tracking-an-object-based-on-color-in-opencv/ which allows a user to
find an appropriate range of HSV values for specific colour detection. Modified to find pixel coordinates of centroids of objects.
Can be used for finding HSV ranges needed for ring task in Main.py.

Two Camera HSV.py is a modified version of HSV.py that implements the same functionality as HSV.py, but with two cameras to allow
for 3D object tracking. Attempting to combine two sets of 2D coordinates into one 3D coordinate set.

sensor_data.txt is where all the sensor data from the previous attempt is saved.
outpy.avi is the video recording of the previous attempt.
Warning_list.txt is the list of all warnings and their timestamps from the previous attempt.


Recommended Software:
- Anaconda (For python 3.9 install and libraries)
- PyCharm Community (python IDE)
- Arduino IDE

Setup Instructions:
- Clone repository to desired location.
- Install Anaconda (Automatically installs python).
- Install PyCharm Community.
- Install Arduino IDE.
- In the Sensor_Code -> Complete_Sensor_Code directory, copy MPU6050_1, MPU6050_2, and PMW3389 folders into Arduino Libraries folder.
  This is typically found in the user's Documents -> Arduino -> Libraries.
- Open Anaconda Powershell, and install the OpenCV2 python library by using "pip install opencv-python".
- Open PyCharm and open the repository as an existing project folder. Choose a Python Interpreter by going to:
  File -> Settings -> Project -> Python Interpreter. Add A new interpreter and choose Virtualenv Envrionment, and ensure the base interpreter
  is set as anaconda3\python.exe. This is found in the User's directory by default.
- All other python libraries used in the project can be installed directly in PyCharm by hovering over the errors (caused by missing libraries),
  and choosing the option to install them, or by going into the Python Interpreter settings and adding a package by searching for it.
- Plug in the camera and Arduino to your computer. Check which COM port the arduino is on through the Arduino IDE. When setting up on a new computer,
  this port can be different, so it will need to be updated in the start_sensors() function in main.py. The cameraID value in main.py may also need updating,
  and is typically a value of 0, if it is the only camera on the computer, or 1 if there is already another camera connected (such as a built in laptop camera).
- In Arduino IDE, upload the Complete_Sensor_code.ino code to the arduino, then launch main.py to start the program. The colors for the ring task may need
  manual calibration, which can be done by updating the HSV ranges (i.e red_low, red_high arrays) with the help of HSV.py.
  
  
Video:
https://www.youtube.com/watch?v=Lf4ZpyTEzIQ
